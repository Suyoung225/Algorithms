## Coding Test Practice Summer/Winter Coding(~2018) - 소수 만들기


```java
import java.util.*;
class Solution {
    public int solution(int[] nums) {
        int answer = -1;
        int generated_num = (nums.length * (nums.length - 1) * (nums.length - 2)) / 6;
        int [] sums = new int[generated_num];
        int n =0;
        for(int i =0; i<nums.length;i++){
            for(int j =i+1 ; j<nums.length;j++){
                for(int k = j+1 ; k< nums.length;k++){
                    sums[n] = nums[i]+nums[j]+nums[k];
                    n++;
                }
            }
        }
        List<Integer> plural = new ArrayList<>();
        for(int i = 0; i < generated_num; i++){
            if(sums[i]%2!=0){
                int denominator = (int) Math.sqrt(sums[i]);
                while(denominator != 1){
                    if(sums[i] % denominator==0) break;
                    denominator--;
                }
                if(denominator==1) plural.add(sums[i]);
            }
        }
        System.out.println(plural);
        return plural.size();
    }
}

***

```java
import java.util.Arrays;

class Solution {

    public int solution(int[] nums) {
        int ans = 0;

        for(int i = 0; i < nums.length - 2; i ++){
            for(int j = i + 1; j < nums.length - 1; j ++){
                for(int k = j + 1; k < nums.length; k ++ ){
                    if(isPrime(nums[i] + nums[j] + nums[k])){
                        ans += 1;  
                    } 
                }
            }
        }
        return ans;
    }
    public Boolean isPrime(int num){
        int cnt = 0;
        for(int i = 1; i <= (int)Math.sqrt(num); i ++){
            if(num % i == 0) cnt += 1; 
        }
        return cnt == 1; //true;
    }
}
```
isPrime 함수를 만드는 것이 훨씬 깔끔
